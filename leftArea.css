:root {
	
}

#leftContainer 
{	
	/* flex: 1 0 calc(var(--cells-size) * var(--cells-equip-row)); */
	/* min-width: calc(var(--cells-size) * var(--cells-equip-row)); */
	height: min-content;
	background-color:cyan;
	display: flex;
	flex-direction: column;
	padding: calc(var(--cells-size) / 2);
}

/* area with top left buttons */
#leftTop {
	display: block;
	min-height: min-content;
	min-width: min-content;	
	background-color:red;	
}

/* area with grid of entries */
#leftBottom {
	display: block;
	height: min-content;
	min-width: min-content;	
	background-color:green;	
}
#leftTopButtons {
	height: var(--cells-size);
	width: calc(var(--cells-size) * 4);
	display: flex;
	flex-direction: row;
}

.leftTopButton
{
	width: 100%;
	height: 100%;
}
.leftTopButton > img
{
	height:100%;
	width:100%;
}
/*var(--mouse-x) and var(--mouse-y) is from mousePositionToCss.js script*/
.noteOnHover {	
	font-family: "CeoFont";
	font-size: 32px;
	padding: 1px 3px;
	background-image: url("content/img/background_1colorfix.png");
	background-size: 100% 100%;
	position: fixed;
	z-index: 100;	
	left: calc(var(--mouse-x) * 100%);
	top: calc(var(--mouse-y) * 100%);
}

.leftTopButton:hover > .noteOnHover {
	display: block;
}
.leftTopButton:not(:hover) > .noteOnHover {
	display: none;
}
/* levels list */

.leftSubGrid {
	display: grid;
}

.leftSubGridEntry {
	width: var(--cells-size);
	height: var(--cells-size);
}

.leftSubGridEntry > img {	
	width: 100%;
	height: 100%;
}
#levelsList {
	grid-template-columns: repeat(var(--cells-levels-row), var(--cells-size));	
}

/* equipment list */

#equipmentList {
	grid-template-columns: repeat(var(--cells-equip-row), var(--cells-size));	
}